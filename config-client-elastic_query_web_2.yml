server:
  port: 8185
  servlet:
    context-path: /elastic-query-web-client

elastic-query-web-client:
  webclient:
    connect-timeout-ms: 10000
    read-timeout-ms: 10000
    write-timeout-ms: 10000
    max-in-memory-size: 10485760 # 10MB
    content-type: 'application/vnd.api.v1+json'
    accept-type: 'application/vnd.api.v1+json'
    base-url: 'http://elastic-query-service/elastic-query-service/documents'
    service-id: elastic-query-service
    # Lista de ids, host e port para o loadBalancer, veja classe ElasticQueryServiceInstanceListSupplierConfig
    instances:
      -
        id: elastic-query-service-1
        host: localhost
        port: 8183
      - id: elastic-query-service-1
        host: localhost
        port: 8186
  query-by-text:
    method: POST
    uri: "/get-document-by-text"
    accept: ${elastic-query-web-client.webclient.accept-type}

spring:
  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: 'elastic-query-web-client-2'
            # Pegar a secret no console admin do keycloak e transformar no Postman request "Encrypt Password"
#            client-secret: '{cipher}54b4326e9052bb75781ae965fb9e309ce50b35d7ec421a8a4a0d13b1705b38118d0e44b3356601c1f00dc055782eb8b8f9378410871a1ea4cbb6ac41ea4b8c1c'
            client-secret: '{cipher}24c6e6027efcbe95021323b2b0e0328d3b170175d94ad82a03606b877424af5f85455a1a304fe1b07ade3ffe8e441f70900f40aa81edeb760f49b79de3bc322e'
            authorization-grant-type: authorization_code
            # Pegar no console admin do keycloak "Clients", "Settings", "Valid redirect URIs" login/oauth2/code
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope: openid
        provider:
          keycloak:
            # As uris abaixo devem ser visualizadas no Postman rodando "OpenID Endpoint Configuration" ou
            # pelo console admin do keycloak para o realm criado em "Realm settings", "Endpoints": "OpenID Endpoint Configuration"
            issuer-uri: http://localhost:9091/realms/microservices-realm
#            issuerUri: http://localhost:8081/auth/realms/microservices-realm
            user-name-attribute: preferred_username


security:
  # Pegar no console admin do keycloak "Clients", "Settings", "Home URL"
  logout-success-url: http://localhost:8185/elastic-query-web-client
  default-client-registration-id: keycloak

# Estas propriedades serão lidas pela classe WebSecurityConfig no módulo: elastic-query-service
user-config:
  username: test
#  password: '{cipher}baeb90d57edb9a050b97b98a7d8cabe80ee884e6fff16c22956172459a43e54d'
  password: '{cipher}78620071212faa6fbc1331721ce51e9afd65baf413eaf4cb8c3560831e1f1118'
  roles: USER